name: C/C++ CI

on:
  push:
    paths:
      - '**/*.c'
      - Makefile
      - Dockerfile
      - .github/workflows/c-cpp.yml

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libmpg123-dev libao-dev
    
    - name: Run make command
      run: |
        make
      
    - name: Create SSL data
      run: openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out cert.pem -subj "/C=US/ST=CO/L=Denver/O=RegisUniversity/OU=CS469/CN=regis.edu/emailAddress=hsherwin@regis.edu"
      
    - name: Build Docker image for server
      run: |
        docker build -t server .
        docker images
      
    - name: Run a server container
      run: docker run -d --name test-server -p 8080:8080 server
      
    - name: Check Docker container status
      run: |
        sleep 10  # Wait for the server to stabilize
        STATUS=$(docker inspect --format='{{.State.Status}}' test-server)
        if [ "$STATUS" != "running" ]; then
          echo "Server failed to start, status: $STATUS"
          exit 1
        else
          echo "Server is running, status: $STATUS"
        fi
    
    - name: Stop and remove Docker container
      run: |
        docker stop test-server
        docker rm test-server
        
    - name: Save Docker image as tar
      run: |
        docker save -o server-image.tar server:latest
        
    - name: Install Kubectl
      run: |
        curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl

    - name: Install Minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube
        
    - name: Start Minikube
      run: |
        minikube start --driver=docker
        
    - name: Tell Minikube to use the Docker environment
      run: |
        eval $(minikube -p minikube docker-env)
    
    - name: Check Minikube status
      run: |
        minikube status
        
    - name: Load tar on all Minikube nodes
      run: |
        for node in $(kubectl get nodes -o name | cut -d'/' -f 2); do
          echo "Loading image on $node"
          minikube cp server-image.tar $node:/server-image.tar
          minikube ssh -n $node 'docker load -i /server-image.tar'
          minikube ssh -n $node 'docker images'
        done
        
    - name: Apply Kubernetes manifest
      run: |
        kubectl apply -f k8s-manifest.yml
        
    - name: Check pod status
      run: |
        sleep 10  # Give some time for the pods to initialize
        kubectl get pods